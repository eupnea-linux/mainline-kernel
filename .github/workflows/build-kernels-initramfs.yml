name: Build kernels
on:
  push:
    branches: [ "initramfs" ]
  workflow_dispatch:
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-stable:
    runs-on: ubuntu-latest
    steps:
      - name: Maximizing build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 5120
          swap-size-mb: 1024
          remove-dotnet: 'true'

      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Installing dependencies
        run: sudo apt update && sudo apt install git build-essential ncurses-dev xz-utils libssl-dev bc flex libelf-dev bison binutils

      - name: Building the stable Kernel
        run: ./build.sh stable

      - name: Uploading as artifact
        uses: actions/upload-artifact@v2
        with:
          name: kernel-stable
          retention-days: 1
          path: |
            bzImage-stable
            modules-stable.tar.xz
            headers-stable.tar.xz

  build-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Maximizing build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 5120
          swap-size-mb: 1024
          remove-dotnet: 'true'

      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Installing dependencies
        run: sudo apt update && sudo apt install git build-essential ncurses-dev xz-utils libssl-dev bc flex libelf-dev bison binutils

      - name: Building testing kernel
        run: ./build.sh testing

      - name: Uploading as artifact
        uses: actions/upload-artifact@v2
        with:
          name: kernel-testing
          retention-days: 1
          path: |
            bzImage-testing
            modules-testing.tar.xz
            headers-testing.tar.xz

  create-release:
    runs-on: ubuntu-latest
    needs: [ build-stable, build-testing ]
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Deleting old dev release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: dev-build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generating release tag and setting prerelease + name
        id: tag
        run: |
          echo "::set-output name=release_tag::dev-build" 
          echo "::set-output name=release_type::true"
          echo "::set-output name=commit_message::$(git log -1 --pretty=format:"%s")"

      - name: creating tmp folder
        run: mkdir /tmp/artifacts

      - name: Downloading kernel artifacts
        uses: actions/download-artifact@v3
        with:
          path: /tmp/artifacts/

      - name: Publishing new release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          name: Mainline kernel build - ${{ steps.tag.outputs.commit_message }}
          prerelease: ${{ steps.tag.outputs.release_type }}
          body: |
            Triggered by ${{ github.sha }} at ${{ github.event.repository.updated_at }}
          files: |
            /tmp/artifacts/kernel*/bzImage*
            /tmp/artifacts/kernel*/modules*
            /tmp/artifacts/kernel*/headers*
